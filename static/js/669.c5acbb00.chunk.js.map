{"version":3,"file":"static/js/669.c5acbb00.chunk.js","mappings":"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","sources":["webpack://my-app2/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app2/./src/components/Dialogs/DialogsList/DialogItem/DialogItem.module.css?f128","components/Dialogs/DialogsList/DialogItem/DialogItem.jsx","webpack://my-app2/./src/components/Dialogs/DialogsList/DialogsList.module.css?206d","components/Dialogs/DialogsList/DialogsList.jsx","webpack://my-app2/./src/components/Dialogs/MessagWrite/FormMessag/FormMessag.module.css?4ee9","components/Dialogs/MessagWrite/FormMessag/FormMessag.jsx","components/Dialogs/MessagWrite/MessagWrite.jsx","webpack://my-app2/./src/components/Dialogs/Messages/Messag/Messag.module.css?92c5","components/Dialogs/Messages/Messag/Messag.jsx","webpack://my-app2/./src/components/Dialogs/Messages/Messages.module.css?2673","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hot/authUs.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialog__title\":\"Dialogs_dialog__title__xKEiG\",\"list__messag\":\"Dialogs_list__messag__mvgjE\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog__item\":\"DialogItem_dialog__item__HvWCc\",\"actives\":\"DialogItem_actives__08Ddu\"};","import React from \"react\";\r\nimport st from \"./DialogItem.module.css\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function DialogItem({id, title}){\r\n    const path = `/dialogs/${id}`;\r\n    return(\r\n            <div className={`${st.dialog__item}` }>\r\n                <NavLink to={path} className={`${st.dialog__item_user}`}>{title}</NavLink>\r\n            </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialog__items\":\"DialogsList_dialog__items__KrBTi\"};","import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport st from './DialogsList.module.css';\nimport { listComponentWriteDialog } from \"../../../utils/helpers\";\n\nexport default function DialogsList({listUs}){\n  return(\n    <div className={st.dialog__items}>\n      {listComponentWriteDialog(listUs, DialogItem)}\n    </div> \n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"FormMessag_textarea__o6PxR\",\"btn\":\"FormMessag_btn__4a8wF\",\"posts\":\"FormMessag_posts__lu5+X\",\"no__text\":\"FormMessag_no__text__JmD0H\",\"wrap\":\"FormMessag_wrap__mOQwh\"};","import st from './FormMessag.module.css';\nimport { useFormik } from \"formik\";\nimport { validateMessag } from \"../../../validators/validForm\";\nimport { useRef } from 'react';\n\nexport default function FormMessagWrite({ messagAdd }) {\n  const formik = useFormik({\n      initialValues: {\n          messag: '',\n      },\n      validate: validateMessag(600, 'messag'),\n      onSubmit(val) {\n          messagAdd(val.messag);\n          val.messag = '';\n          mesRef.current.value = '';\n      }\n  });\n  const mesRef = useRef('');\n  return (\n      <div className={st.posts}>\n          <form onSubmit={formik.handleSubmit}>\n              <textarea\n                  name=\"messag\"\n                  id=\"messag\"\n                  className={st.textarea}\n                  placeholder='your news...'\n                  onChange={formik.handleChange}\n                  value={formik.messag}\n                  ref={mesRef}\n              />\n          {formik.errors.messag?<div className={st.no__text}>{formik.errors.messag}</div>:null}\n              <button\n                  type='submit'\n                  className={st.btn}\n              >Submit</button>\n              <div className={st.wrap}></div>\n          </form>\n      </div>\n  )\n}","import React from \"react\";\r\nimport FormMessagWrite from \"./FormMessag/FormMessag\";\r\n\r\nexport default function Messagwrite({messagAdd}) {\r\n    return (\r\n        <FormMessagWrite messagAdd = {messagAdd} />\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"messag__item\":\"Messag_messag__item__z2Qdi\"};","import React from \"react\";\r\nimport st from \"./Messag.module.css\";\r\n\r\nexport default function Messag({messag}){\r\n    return(\r\n        <div className={st.messag__item}>\r\n            <div className={st.message}>{messag}</div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialog__messages\":\"Messages_dialog__messages__CRJR6\"};","import Messag from \"./Messag/Messag\";\nimport st from './Messages.module.css'\nimport { listComponentWriteMessag } from \"../../../utils/helpers\";\n\nexport default function Messages({messages}){\n  return (\n    <div className={st.dialog__messages}>\n      <div className={st.dialog__messages_wrap}>\n        {listComponentWriteMessag(messages, Messag)}\n      </div>\n    </div>\n  )\n}","import React from \"react\";\r\nimport st from \"./Dialogs.module.css\";\r\nimport DialogsList from \"./DialogsList/DialogsList\";\r\nimport MessagWrite from \"./MessagWrite/MessagWrite\";\r\nimport Messages from \"./Messages/Messages\";\r\n\r\nexport default function Dialogs(props) {\r\n    return (<div className={st.dialogs}>\r\n                <div className={st.dialog__head}>\r\n                    <h2 className={st.dialog__title}>Сообщения</h2>\r\n                </div>\r\n                <div className={st.list__messag}>\r\n                    <DialogsList listUs={props.data}/>             \r\n                    <Messages messages={props.messages}/>\r\n                </div>\r\n                <MessagWrite messagAdd={props.messagAdd}/>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { messagAdd } from \"../../redux/dialogsPageReducer\";\r\nimport { authUs } from \"../../hot/authUs\";\r\nimport { compose } from \"redux\";\r\nimport { getDialodsPageData, getMessag } from \"../../redux/selectors\";\r\n\r\nfunction DialogsContainer({messages, data, messagAdd}){\r\n        return(\r\n            <Dialogs \r\n            messages={messages}\r\n            data={data}\r\n            messagAdd={messagAdd}\r\n            />\r\n        )\r\n    }\r\n\r\nconst mapStateToProps = state => ({\r\n        messages: getMessag(state),\r\n        data: getDialodsPageData(state),\r\n    });\r\n\r\nexport default compose(connect(mapStateToProps, {messagAdd}), authUs)(DialogsContainer) \r\n","import { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToPropRedirect = state => ({ isAuth: state.authUser.isAuth});\r\nexport function authUs(Component){\r\n    let WrapComponent = props =>{\r\n        if(!props.isAuth) return <Navigate to='/login' />\r\n        return <Component {...props}/>\r\n    }\r\n    WrapComponent = connect(mapStateToPropRedirect, {})(WrapComponent)\r\n    return WrapComponent\r\n}\r\n\r\n\r\n"],"names":["DialogItem","_ref","id","title","path","concat","_jsx","className","st","children","NavLink","to","DialogsList","listUs","listComponentWriteDialog","FormMessagWrite","messagAdd","formik","useFormik","initialValues","messag","validate","validateMessag","onSubmit","val","mesRef","current","value","useRef","_jsxs","handleSubmit","name","placeholder","onChange","handleChange","ref","errors","type","Messagwrite","Messag","Messages","messages","listComponentWriteMessag","Dialogs","props","data","MessagWrite","compose","connect","state","getMessag","getDialodsPageData","authUs","mapStateToPropRedirect","isAuth","authUser","Component","WrapComponent","_objectSpread","Navigate"],"sourceRoot":""}